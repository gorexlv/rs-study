/********************
Problem 2:

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
********************/


struct Fibonacci {
    curr: u64,
    next: u64,
}

impl Iterator for Fibonacci {
    type Item = u64;
    fn next(&mut self) -> Option<u64> {
        let temp = self.next + self.curr;
        self.curr = self.next;
        self.next = temp;

        Some(self.curr)
    }
}

pub fn answer() {
    let mut sum = 0u64;

    for i in (Fibonacci{curr:1, next:1}).take_while(|&x| x < 4000000).filter(|&x| x % 2 ==0) {
        sum += i;
    }

    println!("sum: {}", sum);
}
